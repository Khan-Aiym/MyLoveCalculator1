// Generated by view binder compiler. Do not edit!
package com.example.mylovecalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mylovecalculator.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSecondBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView firstName;

  @NonNull
  public final TextView percent;

  @NonNull
  public final TextView result;

  @NonNull
  public final TextView secondName;

  @NonNull
  public final MaterialButton tryAgainBtn;

  private FragmentSecondBinding(@NonNull ConstraintLayout rootView, @NonNull TextView firstName,
      @NonNull TextView percent, @NonNull TextView result, @NonNull TextView secondName,
      @NonNull MaterialButton tryAgainBtn) {
    this.rootView = rootView;
    this.firstName = firstName;
    this.percent = percent;
    this.result = result;
    this.secondName = secondName;
    this.tryAgainBtn = tryAgainBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.firstName;
      TextView firstName = ViewBindings.findChildViewById(rootView, id);
      if (firstName == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = ViewBindings.findChildViewById(rootView, id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.result;
      TextView result = ViewBindings.findChildViewById(rootView, id);
      if (result == null) {
        break missingId;
      }

      id = R.id.secondName;
      TextView secondName = ViewBindings.findChildViewById(rootView, id);
      if (secondName == null) {
        break missingId;
      }

      id = R.id.tryAgainBtn;
      MaterialButton tryAgainBtn = ViewBindings.findChildViewById(rootView, id);
      if (tryAgainBtn == null) {
        break missingId;
      }

      return new FragmentSecondBinding((ConstraintLayout) rootView, firstName, percent, result,
          secondName, tryAgainBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
